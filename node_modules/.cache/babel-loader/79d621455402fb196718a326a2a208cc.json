{"ast":null,"code":"var _jsxFileName = \"/Users/prathabs/Downloads/PraPortfolio/src/components/ToggleSwitch/ToggleSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = () => {\n  _s();\n  const {\n    isDark\n  } = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      for: \"dark\",\n      checked: isDark,\n      onChange: () => {\n        styleContext.changeTheme();\n        setChecked(!isChecked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"slider round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleSwitch, \"uP2pjddy1hni/2I/aParwEla7yM=\");\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","useContext","StyleContext","jsxDEV","_jsxDEV","ToggleSwitch","_s","isDark","isChecked","setChecked","styleContext","className","children","type","for","checked","onChange","changeTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prathabs/Downloads/PraPortfolio/src/components/ToggleSwitch/ToggleSwitch.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.css\";\n\nconst ToggleSwitch = () => {\n  const { isDark } = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        for=\"dark\"\n        checked={isDark}\n        onChange={() => {\n          styleContext.changeTheme();\n          setChecked(!isChecked);\n        }}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n};\nexport default ToggleSwitch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGN,UAAU,CAACC,YAAY,CAAC;EAC3C,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACO,MAAM,CAAC;EAChD,MAAMG,YAAY,GAAGT,UAAU,CAACC,YAAY,CAAC;EAE7C,oBACEE,OAAA;IAAOO,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACvBR,OAAA;MACES,IAAI,EAAC,UAAU;MACfC,GAAG,EAAC,MAAM;MACVC,OAAO,EAAER,MAAO;MAChBS,QAAQ,EAAEA,CAAA,KAAM;QACdN,YAAY,CAACO,WAAW,CAAC,CAAC;QAC1BR,UAAU,CAAC,CAACD,SAAS,CAAC;MACxB;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFjB,OAAA;MAAMO,SAAS,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEZ,CAAC;AAACf,EAAA,CAnBID,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}